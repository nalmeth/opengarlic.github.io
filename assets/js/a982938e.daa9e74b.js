"use strict";(self.webpackChunkopengarlic_site=self.webpackChunkopengarlic_site||[]).push([[5826],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>h});var a=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,o=function(e,t){if(null==e)return{};var n,a,o={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=a.createContext({}),u=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=u(e.components);return a.createElement(s.Provider,{value:t},e.children)},p="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,o=e.mdxType,r=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),p=u(n),d=o,h=p["".concat(s,".").concat(d)]||p[d]||m[d]||r;return n?a.createElement(h,i(i({ref:t},c),{},{components:n})):a.createElement(h,i({ref:t},c))}));function h(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var r=n.length,i=new Array(r);i[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[p]="string"==typeof e?e:o,i[1]=l;for(var u=2;u<r;u++)i[u]=n[u];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},8183:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>m,frontMatter:()=>r,metadata:()=>l,toc:()=>u});var a=n(7462),o=(n(7294),n(3905));const r={},i="Widgets",l={unversionedId:"Tutorial/Components/widgets",id:"Tutorial/Components/widgets",title:"Widgets",description:"- Smaller components that are combined together to form game screens.",source:"@site/docs/Tutorial/Components/widgets.md",sourceDirName:"Tutorial/Components",slug:"/Tutorial/Components/widgets",permalink:"/docs/Tutorial/Components/widgets",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"docSidebar",previous:{title:"Screens",permalink:"/docs/Tutorial/Components/screens"},next:{title:"Events",permalink:"/docs/Tutorial/events"}},s={},u=[{value:"Example",id:"example",level:2},{value:"Existing Widgets",id:"existing-widgets",level:2},{value:"Bubble",id:"bubble",level:3},{value:"DrawingArea",id:"drawingarea",level:3},{value:"DrawingBoard",id:"drawingboard",level:3},{value:"DrawingSidePanel",id:"drawingsidepanel",level:3},{value:"ColorPalette",id:"colorpalette",level:3},{value:"DrawToolPanel",id:"drawtoolpanel",level:3},{value:"GameButton",id:"gamebutton",level:3},{value:"GameInput",id:"gameinput",level:3},{value:"GameNumericInput",id:"gamenumericinput",level:3},{value:"GameSwitch",id:"gameswitch",level:3},{value:"GameText",id:"gametext",level:3},{value:"GameTimer",id:"gametimer",level:3},{value:"PlayerList",id:"playerlist",level:3}],c={toc:u},p="wrapper";function m(e){let{components:t,...n}=e;return(0,o.kt)(p,(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"widgets"},"Widgets"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Smaller components that are combined together to form game screens."),(0,o.kt)("li",{parentName:"ul"},"Stored in ",(0,o.kt)("em",{parentName:"li"},"client/src/components/widgets")),(0,o.kt)("li",{parentName:"ul"},"Widgets should also contain their own state/logic if appropriate.")),(0,o.kt)("h2",{id:"example"},"Example"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-jsx",metastring:'title="client/src/components/widgets/Widget0.js"',title:'"client/src/components/widgets/Widget0.js"'},"/**\n * Widget 0\n */\nconst Widget0 = (props) => {\n    return (\n        <>\n            <Typography>Hello from Widget 0.</Typography>\n        </>\n    )\n}\n\nexport default Widget0;\n")),(0,o.kt)("h2",{id:"existing-widgets"},"Existing Widgets"),(0,o.kt)("h3",{id:"bubble"},"Bubble"),(0,o.kt)("p",null,"Creates chat bubbles. ",(0,o.kt)("em",{parentName:"p"},"(ex. Standard end screen)")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"side:string     // BUBBLE_LEFT or BUBBLE_RIGHT constants\nchildren:mixed  // Child nodes\n")),(0,o.kt)("h3",{id:"drawingarea"},"DrawingArea"),(0,o.kt)("p",null,"Combines ",(0,o.kt)("em",{parentName:"p"},"DrawingBoard"),", ",(0,o.kt)("em",{parentName:"p"},"DrawingTools")," and ",(0,o.kt)("em",{parentName:"p"},"DrawingSidePanel")," to form an entire drawing set."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"showTools:boolean                   // Whether to display the drawing tools panel\nstageRef:React.MutableRefObject     // Link to the stage component in DrawingBoard\ndisplayShapes:Array                 // Array of shapes to display on the DrawingBoard on load\nlockBoard:boolean                   // Whether the drawing board is locked to prevent drawing\nMAX_WIDTH:number                    // Maximum width of the drawing board\nMAX_HEIGHT:number                   // Maximum height of the drawing board\nonChange:function(shapes:Array)     // Function that receives shape data when the state changes\n")),(0,o.kt)("h3",{id:"drawingboard"},"DrawingBoard"),(0,o.kt)("p",null,"The board to draw on"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"brushColor:string                   // Hexidecimal stroke color\nbgColor:string                      // Hexidecimal background color\nopacity:number                      // Drawing opacity\nstrokeWidth:number                  // The width of the stroke\nlineCap:string                      // The type of line cap ('butt', 'round', or 'square')\ntension:number                      // Higher values result in a more curvy line. 0 = no interpolation.\ntool:object                         // One of the drawing tool objects defined in DrawingTools\ndisplayShapes:Array                 // Array of shapes to display on the DrawingBoard on load\nlockBoard:boolean                   // Whether the drawing board is locked to prevent drawing\nMAX_WIDTH:number                    // Maximum width of the drawing board\nMAX_HEIGHT:number                   // Maximum height of the drawing board\nonChange:function(shapes:Array)     // Function that receives shape data when the state changes\n")),(0,o.kt)("h3",{id:"drawingsidepanel"},"DrawingSidePanel"),(0,o.kt)("p",null,"Combines ",(0,o.kt)("em",{parentName:"p"},"DrawToolPanel")," and ",(0,o.kt)("em",{parentName:"p"},"ColorPalette")," to form an\nentire tool/color selection set."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"toolSettings:object                 // Object with all the tool settings\n                                    // (brushColor, bgColor, opacity, strokeWidth, lineCap, tension, tool)\nsetTool:function(toolName:string, value:mixed)  // Hook that returns the name of the tool and it's new value\nresetTools:function                 // Function to call that resets all the tool settings\n")),(0,o.kt)("h3",{id:"colorpalette"},"ColorPalette"),(0,o.kt)("p",null,"Color selection."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"setColor:function(color:string)     // Hook that returns the selected color (as hexidecimal)\n")),(0,o.kt)("h3",{id:"drawtoolpanel"},"DrawToolPanel"),(0,o.kt)("p",null,"Panel that displays all the drawing tools."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"activeTool:object                               // One of the drawing tool objects defined in DrawingTools\nsetTool:function(toolName:string, value:mixed)  // Function that receives the name of the tool to and it's new value\n")),(0,o.kt)("h3",{id:"gamebutton"},"GameButton"),(0,o.kt)("p",null,"MUI Button component styled like other buttons."),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"Accepts all the same props as a MUI Button. Except 'variant' which is locked to 'contained'\nSee: ",(0,o.kt)("a",{parentName:"p",href:"https://mui.com/material-ui/react-button/"},"MUI Button"))),(0,o.kt)("h3",{id:"gameinput"},"GameInput"),(0,o.kt)("p",null,"MUI TextField component styled like other inputs."),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"Accepts all the same props as a MUI TextField.\nSee: ",(0,o.kt)("a",{parentName:"p",href:"https://mui.com/material-ui/react-text-field/"},"MUI TextField")),(0,o.kt)("pre",{parentName:"blockquote"},(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"initialValue:string         // Value to automatically populate the input\nonUpdate:function(value)    // Hook to return updated values during change\n"))),(0,o.kt)("h3",{id:"gamenumericinput"},"GameNumericInput"),(0,o.kt)("p",null,"MUI TextField component styled like other inputs. Accepts only numbers.\nCan be used for number ranges."),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"Accepts all the same props as a MUI TextField.\nSee: ",(0,o.kt)("a",{parentName:"p",href:"https://mui.com/material-ui/react-text-field/"},"MUI TextField")),(0,o.kt)("pre",{parentName:"blockquote"},(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"initialValue:number         // Value to automatically populate the input\nonUpdate:function(value)    // Hook to return updated values during change\nminValue:number             // Minimum value to allow (optional)\nmaxValue:number             // Maximum value to allow (optional)\n"))),(0,o.kt)("h3",{id:"gameswitch"},"GameSwitch"),(0,o.kt)("p",null,"MUI Switch component."),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"Accepts all the same props as a MUI Switch. This may change in the future.\nSee: ",(0,o.kt)("a",{parentName:"p",href:"https://mui.com/material-ui/react-switch/"},"MUI Switch"))),(0,o.kt)("h3",{id:"gametext"},"GameText"),(0,o.kt)("p",null,"MUI Typography component."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"displayText:string      // Text to display\n")),(0,o.kt)("h3",{id:"gametimer"},"GameTimer"),(0,o.kt)("p",null,"CountdownCircleTimer component. See ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/vydimitrov/react-countdown-circle-timer"},"react-countdown-circle-timer")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"timerKey:string                 // Key prop for the component (default 'gameTimer')\nisPlaying:boolean               // Whether the timer is active (default 'true')\nduration:number                 // Number of seconds\ninitialRemainingTime:number     // The initial remaining time on the timer if different from the duration (default 'null')\nsize:number                     // Width and height of the element (default '60')\ncolors:Array                    // Colors that change as the timer counts\ncolorsTime:number               // Indicates the time when a color should switch to the next color.\n                                // The first number is the countdown duration and the last one is 0 or goal.\nstrokeWidth:number              // Stroke width of the timer (default '5')\nonUpdate:function(remainingTime:number)     // Remaining time update handler\nonComplete:function             // On timer complete handler\nchildren:mixed                  // Render function to customize the time/content in the center of the circle\n")),(0,o.kt)("h3",{id:"playerlist"},"PlayerList"),(0,o.kt)("p",null,"Displays list of players."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"icons:boolean                   // Displays the owner and kick icon buttons (default 'true')\nbuttonList:boolean              // Whether the list items are buttons or not (default 'false')\ncode:string                     // Lobby code for when player kick button is clicked\nowner:string                    // Name of the lobby owner\nplayerName:string               // Name of the player\nplayers:Array<object>           // Player object list\nbreakpoints:object              // Define breakpoints for the list (default {xs:4})\n                                // (see: https://mui.com/material-ui/customization/breakpoints/)\nonPlayerKick:function(code:string, playerName:string)       // Function called when a player kick button is clicked\nonPlayerClick:function(index:number)    // Function called when a player list item button is clicked (when buttonList is 'true')\n")))}m.isMDXComponent=!0}}]);